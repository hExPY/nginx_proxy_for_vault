## Upstream defines a usable backend which allows sending requests to several servers
upstream backends {
  server localhost:81;
  server localhost:82;
}

server {
  ## This Server listen to port 80
  listen        80;
  location / {
    ## All requests to "http://localhost:80/" will send to the upstream named "backends" 
    proxy_pass            "http://backends/";

    ## The option "proxy_next_upstream" can be defined with several arguments to tell the NGINX when it should send the request to the next upstream
    proxy_next_upstream   http_500;
  }
}

server {
  ## This Server listen to port 81
  listen 81;
  location / {
    ## The location "http://localhost:81/" always return HTTP 500
    return 500;
  }
}

server {
  ## This Server listen to port 82
  listen 82;
  location / {
    ## We set the Header Content-Type to text/plain because the default Content-Type is application/octet-stream which would result in a download
    add_header Content-Type text/plain;

    ## This simply return HTTP 200 with text
    return 200 "Upstream 2 Responded";
  }
}
